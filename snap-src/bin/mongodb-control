#!/bin/bash

# get wekan/mongo settings
source $SNAP/bin/wekan-read-settings

if [ "true" == "${DISABLE_MONGODB}" ]; then
    echo "mongodb is disabled. Stop service"
    snapctl stop --disable ${SNAP_NAME}.mongodb
    exit 0
fi

# make sure we have set minimum env variables for locale
if [ -z "$LANG" ]; then
    export LANG=en_US.UTF-8
fi

export LC_ALL=C
export PATH=/snap/${SNAP_NAME}/current/usr/bin:/snap/${SNAP_NAME}/current/bin:$PATH
export LD_LIBRARY_PATH=/snap/${SNAP_NAME}/current/lib:/snap/${SNAP_NAME}/current/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH

#if test -f "$SNAP_COMMON/01-migrate-mongo3-to-mongo5.txt"; then
#   touch "$SNAP_COMMON/01-migrate-mongo3-to-mongo5.txt"
#   # Stop MongoDB
#   touch "$SNAP_COMMON/02-disable-mongo.txt"
#   snapctl stop --disable ${SNAP_NAME}.mongodb
#   touch "$SNAP_COMMON/03-eval-stop-mongo.txt"
#   mongo wekan --eval "db.getSiblingDB('admin').shutdownServer()" $BIND_OPTIONS
#   # Start MongoDB 4.4
#   touch "$SNAP_COMMON/04-start-mongo44.txt"
#   $SNAP/mongo44bin/mongod --dbpath $SNAP_COMMON --logpath $SNAP_COMMON/02_mongodb_log_while_migrate.txt --logappend --journal $MONGO_URL --quiet
#   # Wait MongoDB 4.4 to start
#   touch "$SNAP_COMMON/05-wait-2s-mongo44-start.txt"
#   sleep 2s
#   # Dump Old MongoDB 3.x database
#   touch "$SNAP_COMMON/06-dump-database.txt"
#   (cd $SNAP_COMMON && mongodump --port ${MONGODB_PORT})
#   # Stop MongoDB 4.4
#   touch "$SNAP_COMMON/07-stop-mongo44.txt"
#   $SNAP/mongo44bin/mongo wekan --eval "db.getSiblingDB('admin').shutdownServer()" $BIND_OPTIONS
#   # Wait MongoDB 4.4 to stop
#   touch "$SNAP_COMMON/08-wait-2s-mongo44-stop.txt"
#   sleep 2s
#   # Start MongoDB 5
#   touch "$SNAP_COMMON/09-start-mongo5.txt"
#   mongod --dbpath $SNAP_COMMON --logpath $SNAP_COMMON/10_mongodb_log_while_migrate.txt --logappend --journal $MONGO_URL --quiet
#   # Restore database
#   touch "$SNAP_COMMON/11-mongorestore-to-mongo5.txt"
#   (cd $SNAP_COMMON && mongorestore --port ${MONGODB_PORT})
#   # Wait 5s
#   touch "$SNAP_COMMON/12-wait-5s-after-restore.txt"
#   sleep 5s
#   # Shutdown mongodb
#   touch "$SNAP_COMMON/13-shutdown-mongodb.txt"
#   mongo wekan --eval "db.getSiblingDB('admin').shutdownServer()" $BIND_OPTIONS
#   touch "$SNAP_COMMON/14-wait-5s-after-mongo5-shutdown.txt"
#   sleep 5s
#   # Enable MongoDB 5
#   touch "$SNAP_COMMON/15-enable-mongo-5.txt"
#   snapctl start --enable ${SNAP_NAME}.mongodb
#fi
# When starting MongoDB, if logfile exist, delete it, because now uses syslog instead of logfile,
# because syslog usually already has log rotation.
# https://github.com/wekan/wekan-snap/issues/92
#if test -f "$SNAP_COMMON/mongodb.log"; then
#   rm -f "$SNAP_COMMON/mongodb.log"
#fi

# Alternative: When starting MongoDB, and using logfile, truncate log to last 1000 lines of text.
# 1) If file exists:
#if test -f "$SNAP_COMMON/mongodb.log"; then
#    # 2) Copy last 1000 lines to variable loglast1000lines.
#    loglast1000lines=$(tail -1000 "$SNAP_COMMON/mongodb.log")
#    # 3) Copy variable to replace original MongoDB log.
#    echo "$loglast1000lines" > "$SNAP_COMMON/mongodb.log"
#    # 4) Set variable to be empty.
#    loglast1000lines=""
#fi

if [ -z "$MONGO_URL" ]; then

    # start mongo deamon
    BIND_OPTIONS=""
    SH_BIND_OPTIONS=""
    if [ "nill" != "$MONGODB_BIND_UNIX_SOCKET" ] && [ "x" != "x${MONGODB_BIND_UNIX_SOCKET}" ]; then
        BIND_OPTIONS+=" --unixSocketPrefix  $MONGODB_BIND_UNIX_SOCKET"
    fi
    if [ "x" != "x${MONGODB_BIND_IP}" ]; then
        BIND_OPTIONS+=" --bind_ip $MONGODB_BIND_IP"
        SH_BIND_OPTIONS+=" --host $MONGODB_BIND_IP"
    fi
    if [ "x" != "x${MONGODB_PORT}" ]; then
        BIND_OPTIONS+=" --port $MONGODB_PORT"
        SH_BIND_OPTIONS+=" --port $MONGODB_PORT"
    fi
    echo "mongodb bind options: $BIND_OPTIONS"

    if [ "syslog" == "${MONGO_LOG_DESTINATION}" ]; then
        echo "Sending mongodb logs to syslog"
        mongod --dbpath $SNAP_COMMON --syslog --journal $BIND_OPTIONS --quiet
        exit 0
    fi

    if [ "snapcommon" == "${MONGO_LOG_DESTINATION}" ]; then
        echo "Sending mongodb logs to $SNAP_COMMON"
        mongod --dbpath $SNAP_COMMON --logpath $SNAP_COMMON/mongodb.log --logappend --journal $BIND_OPTIONS --quiet
    fi

    if [ "devnull" == "${MONGO_LOG_DESTINATION}" ]; then
        echo "Sending mongodb logs to /dev/null"
        mongod --dbpath $SNAP_COMMON --logpath /dev/null --journal $BIND_OPTIONS --quiet
    fi


    # Disable MongoDB telemetry and free monitoring
    mongosh wekan --eval 'disableTelemetry();' $SH_BIND_OPTIONS
    mongosh wekan --eval 'db.disableFreeMonitoring();' $SH_BIND_OPTIONS
    # Snap: Disable apparmor="DENIED" at syslog
    # https://github.com/wekan/wekan/issues/4855
    mongosh wekan --eval 'db.adminCommand({ setParameter: 1, diagnosticDataCollectionEnabled: false});' $SH_BIND_OPTIONS
    # Drop indexes on database upgrade, when starting MongoDB
    #mongosh wekan --eval "db.getCollectionNames().forEach(function(col_name) { var coll = db.getCollection(col_name); coll.dropIndexes(); });" $SH_BIND_OPTIONS
    mongosh wekan --eval 'db.adminCommand({ setFeatureCompatibilityVersion: "4.4" });' $SH_BIND_OPTIONS
    # Delete incomplete uploads so that they would not prevent starting WeKan
    mongosh wekan --eval 'db.getCollection("cfs.attachments.filerecord").find( { "uploadedAt": { "$exists": true }, "copies.attachments" : null,"failures.copies.attachments.doneTrying" : {"$ne" : true}});' $SH_BIND_OPTIONS

else

    if [ "syslog" == "${MONGO_LOG_DESTINATION}" ]; then
        echo "Sending mongodb logs to syslog"
        mongod --dbpath $SNAP_COMMON --syslog --journal $MONGO_URL --quiet
    fi

    if [ "snapcommon" == "${MONGO_LOG_DESTINATION}" ]; then
        echo "Sending mongodb logs to $SNAP_COMMON"
        mongod --dbpath $SNAP_COMMON --logpath $SNAP_COMMON/mongodb.log --logappend --journal $MONGO_URL --quiet
    fi

    if [ "devnull" == "${MONGO_LOG_DESTINATION}" ]; then
        echo "Sending mongodb logs to /dev/null"
        mongod --dbpath $SNAP_COMMON --logpath /dev/null --journal $MONGO_URL --quiet
    fi

    # Disable MongoDB telemetry and free monitoring
    mongosh wekan --eval 'disableTelemetry();' $SH_BIND_OPTIONS
    mongosh wekan --eval 'db.disableFreeMonitoring();' $SH_BIND_OPTIONS
    # Snap: Disable apparmor="DENIED" at syslog
    # https://github.com/wekan/wekan/issues/4855
    mongosh wekan --eval 'db.adminCommand({ setParameter: 1, diagnosticDataCollectionEnabled: false});' $SH_BIND_OPTIONS
    # Drop indexes on database upgrade, when starting MongoDB
    #mongosh wekan --eval "db.getCollectionNames().forEach(function(col_name) { var coll = db.getCollection(col_name); coll.dropIndexes(); });" $SH_BIND_OPTIONS
    mongosh wekan --eval 'db.adminCommand({ setFeatureCompatibilityVersion: "4.2" });' $SH_BIND_OPTIONS
   # Delete incomplete uploads so that they would not prevent starting WeKan
    mongosh wekan --eval 'db.getCollection("cfs.attachments.filerecord").find( { "uploadedAt": { "$exists": true }, "copies.attachments" : null,"failures.copies.attachments.doneTrying" : {"$ne" : true}});' $SH_BIND_OPTIONS

fi
